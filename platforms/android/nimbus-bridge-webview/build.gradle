import groovy.json.JsonSlurper

apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'org.jetbrains.dokka'
apply plugin: 'jacoco-android'

android {
    compileSdkVersion 29

    def versionFile = file('../../../lerna.json')
    def parsedVersion = new JsonSlurper().parseText(versionFile.text)
    project.version = parsedVersion.version.toString()

    defaultConfig {
        minSdkVersion 21
        targetSdkVersion 29
        versionCode 1
        versionName version
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            testCoverageEnabled false
        }
        debug {
            testCoverageEnabled true
        }
    }

    sourceSets {
        androidTest {
            assets.srcDirs = ['../../../packages/test-www/dist']
        }
    }

    testOptions {
        unitTests.returnDefaultValues = true
    }
}

dependencies {
    api project(":nimbus-annotations")
    api project(":nimbus-core")
    kapt project(":nimbus-compiler-webview")

    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"

    testImplementation 'junit:junit:4.13'
    testImplementation 'org.slf4j:slf4j-nop:1.7.25'
    testImplementation 'org.json:json:20190722'
    testImplementation 'io.kotlintest:kotlintest-runner-junit4:3.1.5'
    testImplementation "io.mockk:mockk:1.9.3.kotlin12"
    kaptTest project(":nimbus-compiler-webview")

    androidTestImplementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
    androidTestImplementation 'androidx.test:rules:1.1.0', {
        exclude group: 'com.android.support', module: 'support-annotations'
    }
    kaptAndroidTest project(":nimbus-compiler-webview")
}

/*
 * Compile the test web app prior to assembling the androidTest app
 */
task buildTestWebApp(type: Exec) {
    workingDir '../../..'
    commandLine 'npm', 'install'
}

tasks.whenTaskAdded { task ->
    if (task.name ==~ "assemble.*AndroidTest") {
        task.dependsOn buildTestWebApp
    }
}

task sourcesJar(type: Jar) {
    archiveClassifier = 'sources'
    from android.sourceSets.main.java.srcDirs
}

artifacts {
    archives sourcesJar
}

dokka {
    outputFormat = 'html'
    outputDirectory = "$buildDir/dokka"
}

apply from: rootProject.file('gradle/lint.gradle')
apply from: rootProject.file('gradle/publishing.gradle')
